#ifndef test_double_gmock_hpp
#define test_double_gmock_hpp
#include "test_double.hpp"
#include "gmock/gmock.h"

namespace TestDouble {
class MockI_TestDouble : public I_TestDouble {
public:
    MockI_TestDouble();
    virtual ~MockI_TestDouble();

    MOCK_METHOD1(c_func_with_struct, void(const struct A *a));
    MOCK_METHOD1(cyber, func_type *(const unsigned int baz));
    MOCK_METHOD1(func_extern, int(int out));
    MOCK_METHOD0(func_variadic, void());
    MOCK_METHOD1(func_variadic_one_unnamed, int(char *x0));
    MOCK_METHOD1(leopard, func_type *(const unsigned int baz));
    MOCK_METHOD0(tiger, void());
    MOCK_METHOD2(typedef_array_func, int(int *x, int z[16]));
    MOCK_METHOD2(unnamed_params, void(int x0, int x1));
};
} //NS:TestDouble

#endif // test_double_gmock_hpp
